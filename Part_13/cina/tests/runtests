#!/bin/sh
# Run each test and compare
# against known good output

runone() {
  echo -n $1
  ../alica -o bin $1 2> error && ./bin > trial 2>> error
}

# Build our compiler if needed
if [ ! -f ../alica ]
then (cd ..; make)
fi

# Try to use each input source file
for i in test*.al
# We can't do anything if there's no file to test against
do if [ ! -f "out/$i" -a ! -f "err/$i" ]
   then echo "Can't run test on $i, no output or error file!"; exit 1

   # Output file: compile the source, run it and
   # capture the output, and compare it against
   # the known-good output
   else if [ -f "out/$i" ]
        then
	  # Print the test name, compile it with our compiler
	  runone $i

  	  # Compare this agains the correct output
	  # and check the comparison result
          cmp -s "out/$i" trial

          if [ "$?" -eq "0" ]
          then echo ": OK"
          else
	    # If different, announce failure
            # and print out the difference
	    echo ": failed"
	    cat error
            diff -c "out/$i" trial
	    # Stop if our 1st argument is "stop"
	    if [ "$#" -eq 1 ] && [ $1 = "stop" ]
	    then exit 1
	    fi
            echo
          fi

   # Error file: compile the source and
   # capture the error messages. Compare
   # against the known-bad output. Same
   # mechanism as before
   else if [ -f "err/$i" ]
        then
	  runone $i
          cmp -s "err/$i" error
          if [ "$?" -eq "1" ]
          then echo ": failed"
            diff -c "err/$i" error
            echo
          else echo ": OK"
          fi
        fi
     fi
   fi
   rm -f bin *.[sq] trial error
done
